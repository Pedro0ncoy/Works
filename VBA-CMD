POO:(Programación Orientada a Objetos)
---
*Objetos:Propiedades/Atributos(puertas,venatnas,etc) y métodos(arrancar,frenar,etc)
*Instancia:Es un particular de un objeto. Es un ejemplo de un objeto.
*Jerarquia de objetos:Un objeto, pertenece a un objeto mayor que lo contiene.
*Colecciones:Objetos que son similares pertenecen a una colección.
*Referenciar:Utiliza la jerarquia y el operador punto para leer o escribir 
             los valores de los atributos.
*Procedimiento:Ejecuta acciones, es donde va el codigo.

VBA:(Visual Basic for Application)
---
El objeto es una celda(Range)
*Atributos:Bordes,fondo,valor,dirección,etc.
*Métodos:Copiar,Borrar,Seleccionar,etc.
*Jerarquia:Application,Workbooks,Worksheets,<Chart,Range,PivotTables,Names>
*Colecciones:Worksheets tiene la colección de hojas, hoja1, hoja2, hoja3.
             Workbooks tiene la colección de libros, libro1, libro2, libro3.
             Sheets tiene la colección de Sheet1, Sheet2, Sheet3.
*Referenciar:Si se omite un objeto en la referencia,se toma este objeto como activo.
	     worksheets("HOja2").Range("F4")

CMD:
---
Referncias: Ejemplos
Application.workbooks("Libro1").worksheets("Hoja1").Range("b3").value=250

Procedminieto: 
/////////////////////////////////////////////////////////////////////

Sub pedro()
Entero = 250
Worksheets("Hoja1").Range("b3").Value = Entero
End Sub

/////////////////////////////////////////////////////////////////////

Sub pedro()
resultado = MsgBox("Hola Mundo", vbYesNo + vbQuestion, "Mensaje especial")
If resultado = vbYes Then
MsgBox ("Correcto")
Else: MsgBox ("Incorrecto")
End If
End Sub

/////////////////////////////////////////////////////////////////////

Sub pedro()
resultado = MsgBox("Hola Mundo", vbAbortRetryIgnore + vbQuestion, "Mensaje especial")
Select Case resultado
    Case vbOK:     MsgBox "Se pulsó el botón Aceptar"
    Case vbCancel: MsgBox "Se pulsó el botón Cancelar"
    Case vbAbort:  MsgBox "Se pulsó el botón Anular"
    Case vbRetry:  MsgBox "Se pulsó el botón Reintentar"
    Case vbIgnore: MsgBox "Se pulsó el botón Omitir"
    Case vbYes:    MsgBox "Se pulsó el botón Si"
    Case vbNo:     MsgBox "Se pulsó el botón No"
End Select
End Sub

/////////////////////////////////////////////////////////////////////
Sub pedro()

Dim fechaActual As Date
Dim horaActual As Date

fechaActual = Date 'Fecha actualizada
horaActual = Now - Date 'Hora actualizada

Worksheets("Hoja1").Range("b3").Value = fechaActual
Worksheets("Hoja1").Range("c3").Value = horaActual

End Sub

/////////////////////////////////////////////////////////////////////

Private Sub Worksheet_Change (ByVal As Range)
Dim fechaActual As Date
Dim horaActual As Date

fechaActual = Date 'Fecha actualizada
horaActual = Now - Date 'Hora actualizada

Worksheets("Hoja1").Range("b3").Value = fechaActual
Worksheets("Hoja1").Range("c3").Value = horaActual
End Sub

/////////////////////////////////////////////////////////////////////
Private Sub Worksheet_Change(ByVal Target As Range)

If Not Intersect(Target, Range("D1:D10")) Is Nothing Then
Worksheets("Hoja1").Range("b4").Value = Date 'Fecha actualizada
Worksheets("Hoja1").Range("c4").Value = Now - Date 'Hora actualizada
Worksheets("Hoja1").Range("f4").Value = Target.Address
End If
End Sub
/////////////////////////////////////////////////////////////////////
Private Sub Worksheet_Change(ByVal Target As Range)

If Not Intersect(Target, Range("$D:$D")) Is Nothing Then
Cells(Target.Row, Target.Column - 3) = Date 'Fecha actualizada
Cells(Target.Row, Target.Column - 2) = Now - Date 'Hora actualizada
End If
    
End Sub
/////////////////////////////////////////////////////////////////////

Sub Enlistar_Archivos()

    Dim ruta As String 'Declaración de variables y objetos
    ruta = "C:\Users\PEDROBERNARDO.Pedro_Oncoy\Desktop\RRHH"
    Dim fs, carpeta, archivo, subcarpeta As Object
    Set fs = CreateObject("Scripting.FileSystemObject")

    If ruta = "" Then 'Ajustes por si lee un NULL.
        Exit Sub
    ElseIf Right(ruta, 1) <> "\" Then
        ruta = ruta & "\"
    End If
    
    On Error GoTo ErrHandler  'Objeto Folder de la ruta indicada
    Set carpeta = fs.GetFolder(ruta)

    Worksheets("Hoja1").Range("a1").Select
    For Each archivo In carpeta.Files  'Obtener archivos del objeto Folder
         ActiveCell.Value = archivo.Name
         ActiveCell.Offset(1, 0).Select
    Next
    
    ActiveCell.EntireColumn.AutoFit  'Auto-ajustar columnas y salir
    Exit Sub
    
ErrHandler:
    ActiveCell.Value = "Ruta inexistente"

Set fs = Nothing
Set carpeta = Nothing
End Sub

Sub ordenar_archivo()

Do Until Cells(i, 2).Value = "0"
Cells(i, 2).Formula = "=EXTRAE(Cells(i, 2);57;8)"
i = i + 1
Loop

End Sub

//////////////////////////////////////ldap-report pbomv1////////////////////////////////////////////////////////////

Sub Obtención_datos()

Dim strRoot
Dim LDAP1 As String 'declaro la variable dc01
Dim LDAP2 As String 'declaro la variable dc02
LDAP1 = "<LDAP://my.domain:389/DC=com,DC=pe>" 'controlador de dominio1
LDAP2 = "<LDAP://my.domain:389/DC=com,DC=pe>" 'controlador de dominio2

strFilter = "(&(objectCategory=Person)(objectClass=User))" 'filtro solo usuarios.
strAttributes = "sAMAccountName,telephoneNumber,givenName,sn,displayName,mail,title,department,company" 'campos en reporte.
strScope = "subtree" 'vista tipo arbol.

Set cn = CreateObject("ADODB.Connection")  'se crea la conección.
Set cmd = CreateObject("ADODB.Command")  'se crea el formato de comandos.

cn.Provider = "ADsDSOObject"     'se instancia de AD.
cn.Open "Active Directory Provider"   'se nombra a la coneción.
cmd.ActiveConnection = cn     ' cambio de variable al atributo conección.
cmd.Properties("Page Size") = 1000    ' se setea como maximo unas 1000 paginas de respuesta.
cmd.Properties("Searchscope") = ADS_SCOPE_SUBTREE
cmd.CommandText = LDAP1 & ";" & strFilter & ";" & strAttributes & ";" & strScope   'Concatena todos los parametros para el query.

Set rs = cmd.Execute         'se ejecuta el query LDAP.
For i = 0 To rs.Fields.Count - 1        'coloca cabecera.
    Worksheets("Hoja1").Cells(1, i + 1).Value = rs.Fields(i).Name
Next

Worksheets("Hoja1").Range("A2").CopyFromRecordset (rs) 'coloca los valores.

rs.Close   'Cierra el flujo de datos.
cn.Close   'Cierra la conección.
Set rs = Nothing  'Limpia la variable de datos.
Set cn = Nothing  'Limpia la variable conección.

End Sub

////////////////////////////////////////////////////////////////////////////////////////////////////////////
Sub leerArchivoTextoCondicional()

    Dim hoy As Date
    Dim fs, carpeta, ruta, archivo, subcarpeta As Object
    hoy = Date - 5 'Fecha actualizada 'hoy = "06/06/2019" 'para hacer pruebas
    hoy_format = "CESADOS_" & Format(hoy, "ddmmyyyy") & ".XLS" 'Se formatea: CESADOS_01022016.XLS
    ruta = "\\10.25.8.243\Segurinfo\SegurInfo\RRHH\CESADOS\"
    Set fs = CreateObject("Scripting.FileSystemObject")
    Dim marca As Integer
    marca = 0
    
    If ruta = "" Then 'Ajustes por si lee un NULL.
        Exit Sub
    ElseIf Right(ruta, 1) <> "\" Then
        ruta = ruta & "\"
    End If
    
    On Error GoTo ErrHandler  'Objeto Folder de la ruta indicada
    Set carpeta = fs.GetFolder(ruta)
    
    For Each archivo In carpeta.Files  'Realiza un recorrido todo el folder.
        If hoy_format = archivo.Name Then 'Compara cada archivo con el mas actualizado.
            marca = 1
        End If
    Next
    'MsgBox marca
    If marca = 1 Then 'Si se encontró el archivo mas actualizado.
        MsgBox "Si se encontró el archivo más actualizado. Se procede."
    Else
        MsgBox "No se encontró el archivo actualizado. Descargarlo y correr nuevamente el proceso."
    End If
    Exit Sub
    
ErrHandler:
    ActiveCell.Value = "Ruta inexistente"

Set fs = Nothing
Set carpeta = Nothing
End Sub
